<?xml version="1.0" ?>
<launch>
    <!-- TODO bring over rviz from ur5_rviz.launch; create launch file with just static_transform_publisher to be killed after calibration -->
    <arg name="eye_on_hand" default="false" doc="eye-on-hand instead of eye_on_base" />
    <arg unless="$(arg eye_on_hand)" name="namespace" default="eye_on_base" />
    <arg if="$(arg eye_on_hand)" name="namespace" default="eye_on_hand" />

    <!-- The input reference frames -->
    <arg name="base_link_frame"       default="base_link" />
    <arg name="tool_frame"            default="tool0" />
    <arg name="optical_origin_frame"  default="optical_origin" />
    <arg name="optical_target_frame"  default="optical_target" />

    <!-- Publish frames while calibrating -->
    <arg name="publish_tf" default="true"/>

    <!-- Wait for key press or detect absence of movement -->
    <arg name="automatic" default="false"/>
    <arg name="sample_rate" default="10"/>

    <!-- Run the VISP solver to determine the extrinsic parameters -->
    <node ns="$(arg namespace)" name="hand_eye_solver"
        pkg="visp_hand2eye_calibration"
        type="visp_hand2eye_calibration_calibrator">
        <remap from="/compute_effector_camera_quick" to="compute_effector_camera_quick"/>
    </node>
    
    <group ns="$(arg namespace)" >
        <param name="eye_on_hand" value="$(arg eye_on_hand)"/>
        <param name="sample_rate" value="$(arg sample_rate)"/>
        <param name="publish_tf" value="$(arg publish_tf)"/>
        <param name="automatic" value="$(arg automatic)"/>
        <param name="base_link_frame"       value="$(arg base_link_frame)" />
        <param name="tool_frame"            value="$(arg tool_frame)" />
        <param name="optical_origin_frame"  value="$(arg optical_origin_frame)" />
        <param name="optical_target_frame"  value="$(arg optical_target_frame)" />
    </group>

    <!-- Connect the tracker to the solver -->
    <node name="hand_eye_connector"
          ns="$(arg namespace)"
        pkg="handeye_calibration"
        type="calibrate.py"
        output="screen">
    </node>

</launch>
